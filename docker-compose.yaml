version: '3.8'

services:

  minio:
    env_file: .env
    container_name: minio
    hostname: minio
    image: minio/minio:RELEASE.2023-08-16T20-17-30Z
    command: server --console-address ":9001" /data/
    expose:
      - "9000"
      - "9001"
    networks:
      - s3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio_data:/data

  create_buckets:
    image: minio/mc:RELEASE.2023-08-18T21-57-55Z
    env_file: .env
    networks:
      - s3
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 $${AWS_ACCESS_KEY_ID} $${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb myminio/$${AWS_S3_BUCKET};
      /usr/bin/mc anonymous set public myminio/$${AWS_S3_BUCKET};
      exit 0;
      "

  nginx:
    image: nginx:stable-perl
    container_name: nginx
    hostname: nginx
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - s3
    depends_on:
      - minio

  db:
    env_file: .env
    container_name: postgres
    image: postgres:15.4
    restart: always
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres

  pgadmin:
    env_file: .env
    container_name: pgadmin
    image: dpage/pgadmin4:7.6
    restart: always
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres

  mlflow:
    env_file: .env
    restart: always
    build: ./docker/mlflow_image
    container_name: mlflow_server
    ports:
      - "5000:5000"
    networks:
      - postgres
      - s3
    entrypoint: >
      /bin/sh -c "mlflow server --backend-store-uri postgresql://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@db/$${POSTGRES_DB} --default-artifact-root s3://$${AWS_S3_BUCKET}/ --host 0.0.0.0"

networks:
  s3:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  minio_data:
  postgres:
  pgadmin: